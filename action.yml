name: "simple-google-drive-upload"
description: "A simple GitHub action to upload files to google drive (and allow large files)"
author: Samuel Magny
branding:
  icon: "upload"
  color: "blue"

inputs:
  folder_id:
    description: "Google Drive folder ID to upload to"
    required: true
  service_account:
    description: "Google Drive service account JSON"
    required: true
  source_path:
    description: "Source path to upload"
    required: true
  destination_path:
    description: "Destination path in Google Drive"
    required: false
    default: ""
  upload_cutoff:
    description: "Upload cutoff size (e.g. 8M, 16M)"
    required: false
    default: ""
  debug:
    description: "Debug mode"
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Setup Rclone
      uses: AnimMouse/setup-rclone@v1
      with:
        rclone_config: |
          [google_drive]
          type = drive
          scope = drive
          service_account_file = $RCLONE_CONFIG_DIR/service-account-file.json
          root_folder_id = ${{ inputs.folder_id }}
        disable_base64: true

    - name: Add Rclone service account file
      uses: AnimMouse/setup-rclone/service-account-file@v1
      with:
        service_account_filename: service-account-file.json
        service_account_file: ${{ inputs.service_account }}

    - name: Upload files
      shell: bash
      run: |
        DEBUG=${{ inputs.debug }}
        INPUT_PATHS=${{ inputs.source_path }}
        CUTOFF_OPTION=$([ -n "${{ inputs.upload_cutoff }}" ] && echo "--drive-upload-cutoff=${{ inputs.upload_cutoff }}" || echo "")
        
        # Create a temporary file to store all matched file paths
        MATCHED_FILES=$(mktemp)
        
        # Make sure we're using bash version 4+ that supports globstar
        if [[ ${BASH_VERSINFO[0]} -ge 4 ]]; then
          shopt -s globstar nullglob
          for file in $INPUT_PATHS; do
            echo "$file" >> "$MATCHED_FILES"
          done
        else
          echo "::error::Bash version 4+ is required for globstar support"
          rm "$MATCHED_FILES"
          exit 1
        fi

        if [ "$DEBUG" = true ]; then
          cat "$MATCHED_FILES"
        fi

        # Check if we found any files
        if [ ! -s "$MATCHED_FILES" ]; then
            echo "::error::No files found matching any of the provided paths"
            rm "$MATCHED_FILES"
            exit 1
        fi
        
        # Upload each file
        while IFS= read -r file; do
          echo "Uploading $file to google_drive:${{ inputs.destination_path }}"
          rclone copy $CUTOFF_OPTION "$file" "google_drive:${{ inputs.destination_path }}"
        done < "$MATCHED_FILES"
        
        # Cleanup
        rm "$MATCHED_FILES"
