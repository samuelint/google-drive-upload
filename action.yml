name: "simple-google-drive-upload"
description: "A simple GitHub action to upload files to google drive (and allow large files)"
author: Samuel Magny
branding:
  icon: "upload"
  color: "blue"

inputs:
  folder_id:
    description: "Google Drive folder ID to upload to"
    required: true
  service_account:
    description: "Google Drive service account JSON"
    required: true
  source_path:
    description: "Source path to upload"
    required: true
  destination_path:
    description: "Destination path in Google Drive"
    required: false
    default: ""
  upload_cutoff:
    description: "Upload cutoff size (e.g. 8M, 16M)"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Setup Rclone
      uses: AnimMouse/setup-rclone@v1
      with:
        rclone_config: |
          [google_drive]
          type = drive
          scope = drive
          service_account_file = $RCLONE_CONFIG_DIR/service-account-file.json
          root_folder_id = ${{ inputs.folder_id }}
        disable_base64: true

    - name: Add Rclone service account file
      uses: AnimMouse/setup-rclone/service-account-file@v1
      with:
        service_account_filename: service-account-file.json
        service_account_file: ${{ inputs.service_account }}

    - name: Upload files
      shell: bash
      run: |
        CUTOFF_OPTION=$([ -n "${{ inputs.upload_cutoff }}" ] && echo "--drive-upload-cutoff=${{ inputs.upload_cutoff }}" || echo "")
        
        # Enable extended globbing and globstar for ** pattern support
        shopt -s globstar nullglob extglob
        
        # Track if we found any files
        FILES_FOUND=0
        
        # Process source_path as multi-line input
        echo "${{ inputs.source_path }}" | while IFS= read -r pattern || [ -n "$pattern" ]; do
          # Skip empty lines
          [ -z "$pattern" ] && continue
          
          echo "Finding files matching pattern: $pattern"
          
          # Handle the pattern differently to support complex globs
          matching_files=($(eval echo $pattern))
          
          if [ ${#matching_files[@]} -eq 0 ]; then
            echo "Warning: No files found matching pattern: $pattern"
          else
            for file in "${matching_files[@]}"; do
              if [ -e "$file" ]; then
                echo "Uploading $file to google_drive:${{ inputs.destination_path }}"
                rclone copy $CUTOFF_OPTION "$file" "google_drive:${{ inputs.destination_path }}"
                FILES_FOUND=1
              fi
            done
          fi
        done
        
        # Disable globstar
        shopt -u globstar nullglob extglob
        
        # Fail the action if no files were found
        if [ $FILES_FOUND -eq 0 ]; then
          echo "::error::No files found matching the provided patterns"
          exit 1
        fi
